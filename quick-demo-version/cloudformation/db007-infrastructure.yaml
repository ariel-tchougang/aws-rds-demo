AWSTemplateFormatVersion: '2010-09-09'
Description: 'Mission DB007 - Multi-AZ RDS Infrastructure for DataCorp resilience demonstration'

Parameters:
  ProjectName:
    Type: String
    Default: 'db007-mission'
    Description: 'Project name for resource tagging'
  
  DBInstanceClass:
    Type: String
    Default: 'db.t3.micro'
    AllowedValues: ['db.t3.micro', 'db.t3.small', 'db.t3.medium']
    Description: 'RDS instance class'
  
  DBName:
    Type: String
    Default: 'datacorp'
    Description: 'Database name'
  
  DBUsername:
    Type: String
    Default: 'db007'
    Description: 'Database master username'
  
  DBPassword:
    Type: String
    NoEcho: true
    MinLength: 8
    Description: 'Database master password (min 8 characters)'
  
  VpcCidr:
    Type: String
    Default: '10.0.0.0/16'
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\/(1[6-9]|2[0-8])$'
    ConstraintDescription: 'Must be a valid CIDR block with prefix length between /16 and /28'
    Description: 'VPC CIDR block (e.g., 10.0.0.0/16)'
  
  ClientAccessCidr:
    Type: String
    Default: '0.0.0.0/0'
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\/(0|[1-9]|[1-2][0-9]|3[0-2])$'
    ConstraintDescription: 'Must be a valid CIDR block (e.g., 203.0.113.42/32)'
    Description: 'CIDR block for database access (SECURITY: Use your IP/32 for better security, or 0.0.0.0/0 for CloudShell)'

Resources:
  # VPC Configuration
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${AWS::Region}-vpc'
        - Key: Mission
          Value: 'DB007'

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${AWS::Region}-igw'

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnets (for application)
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Cidr [!Ref VpcCidr, 4, 8]]
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${AWS::Region}-public-subnet-1'
        - Key: Type
          Value: 'Public'

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Cidr [!Ref VpcCidr, 4, 8]]
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${AWS::Region}-public-subnet-2'
        - Key: Type
          Value: 'Public'



  # Route Tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${AWS::Region}-public-rt'

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # Security Groups


  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for DB007 RDS instance (Quick Demo - Public Access)'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !Ref ClientAccessCidr
          Description: 'PostgreSQL access from client (SECURITY WARNING: Public access enabled for quick demo)'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${AWS::Region}-db-sg'

  # DB Subnet Group (using public subnets for quick demo)
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: 'Subnet group for DB007 Multi-AZ RDS (Quick Demo - Public Subnets)'
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${AWS::Region}-db-subnet-group'

  # RDS Instance (Multi-AZ PostgreSQL)
  RDSInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      DBInstanceIdentifier: !Sub '${ProjectName}-${AWS::Region}-postgres'
      DBInstanceClass: !Ref DBInstanceClass
      Engine: 'postgres'
      EngineVersion: '15.14'
      AllocatedStorage: 20
      StorageType: 'gp3'
      DBName: !Ref DBName
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: true
      MultiAZ: true
      BackupRetentionPeriod: 7
      DeleteAutomatedBackups: true
      DeletionProtection: false
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: 7
      MonitoringInterval: 60
      MonitoringRoleArn: !GetAtt RDSEnhancedMonitoringRole.Arn
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${AWS::Region}-postgres'
        - Key: Mission
          Value: 'DB007'
        - Key: Purpose
          Value: 'Multi-AZ Demonstration'



  # IAM Role for RDS Enhanced Monitoring
  RDSEnhancedMonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: monitoring.rds.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole'
      Path: /

Outputs:
  VPCId:
    Description: 'VPC ID for Mission DB007'
    Value: !Ref VPC
    Export:
      Name: !Sub '${ProjectName}-${AWS::Region}-vpc-id'

  PublicSubnet1Id:
    Description: 'Public Subnet 1 ID'
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub '${ProjectName}-${AWS::Region}-public-subnet-1-id'

  PublicSubnet2Id:
    Description: 'Public Subnet 2 ID'
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub '${ProjectName}-${AWS::Region}-public-subnet-2-id'



  RDSEndpoint:
    Description: 'RDS Instance Endpoint'
    Value: !GetAtt RDSInstance.Endpoint.Address
    Export:
      Name: !Sub '${ProjectName}-${AWS::Region}-rds-endpoint'

  RDSPort:
    Description: 'RDS Instance Port'
    Value: !GetAtt RDSInstance.Endpoint.Port
    Export:
      Name: !Sub '${ProjectName}-${AWS::Region}-rds-port'

  DatabaseName:
    Description: 'Database Name'
    Value: !Ref DBName

  AvailabilityZone1:
    Description: 'Primary Availability Zone'
    Value: !Select [0, !GetAZs '']

  AvailabilityZone2:
    Description: 'Secondary Availability Zone'
    Value: !Select [1, !GetAZs '']

  VpcCidr:
    Description: 'VPC CIDR Block'
    Value: !Ref VpcCidr
    Export:
      Name: !Sub '${ProjectName}-${AWS::Region}-vpc-cidr'

  DatabaseSecurityGroupId:
    Description: 'Database Security Group ID'
    Value: !Ref DatabaseSecurityGroup
    Export:
      Name: !Sub '${ProjectName}-${AWS::Region}-db-sg-id'